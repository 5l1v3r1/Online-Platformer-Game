/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mygdx.game;

import com.esotericsoftware.kryo.Kryo;
import com.esotericsoftware.kryonet.Connection;
import com.esotericsoftware.kryonet.Listener;
import com.esotericsoftware.kryonet.Server;
import com.mygdx.Packets.Disconnect;
import com.mygdx.Packets.FirstPacket;
import com.mygdx.Packets.Moving;
import com.mygdx.Packets.Post;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author MYPC
 */
public class GameiServer extends javax.swing.JFrame {

    /**
     * Creates new form GameiServer
     */
    
    Server server;
    Kryo kryo = new Kryo();
    
    Character[] playerArr = new Character[20];
    
    public int onlinePlayer = -1; /// dummy
    public int PlayerID = 0;
    public GameiServer() {
        initComponents();
        server = new Server();
        try {
            server.bind(54555);
        } catch (IOException ex) {
            Logger.getLogger(GameiServer.class.getName()).log(Level.SEVERE, null, ex);
        }
        server.start();
        kryo = server.getKryo();
        kryo.register(FirstPacket.class);
        kryo.register(Post.class);
        kryo.register(Character.CharacterDirection.class);
        kryo.register(Character.CharacterState.class);
        kryo.register(Moving.class);
        kryo.register(Disconnect.class);
        server.addListener(new Listener(){
            @Override
            public void received(Connection conn, Object obj){
                if (obj instanceof FirstPacket) {
                    
                    FirstPacket fp = (FirstPacket)obj;
                    System.out.println(onlinePlayer);
                    fp.id = conn.getID();
                    server.sendToTCP(conn.getID(), fp);
                    
                    playerArr[conn.getID()] = new Character(fp.id, fp.x);
                    PlayerID++;
                }
                if (obj instanceof Post) {
                    server.sendToAllExceptTCP(conn.getID(), (Post)obj);
//                    for (int i = 0; i < PlayerID; i++) {
//                        if (playerArr[i].id == ((Post) obj).playerid) {
//                            playerArr[i].PostX = ((Post) obj).postX;
//                            playerArr[i].PostY = ((Post) obj).postY;
//                            break;
//                        }
//                    }
                    playerArr[conn.getID()].setPostX(((Post) obj).postX);
                    playerArr[conn.getID()].setPostY(((Post) obj).postY);
                    for (int i = 0; i < PlayerID; i++) {
                        if (playerArr[i] != null && playerArr[i].id != ((Post) obj).playerid) {
                            Post post = new Post();
                            post.playerid = playerArr[i].id;
                            post.postX = (int) playerArr[i].getPostX();
                            post.postY = (int) playerArr[i].getPostY();
                            server.sendToTCP(conn.getID(), post);
                        }
                    }
                }
                if (obj instanceof Moving) {
                    server.sendToAllExceptTCP(conn.getID(), (Moving)obj);
                }
            }
            @Override
            public void connected(Connection conn){
                onlinePlayer++;
            }
            @Override
            public void disconnected(Connection conn){
                onlinePlayer--;
                playerArr[conn.getID()] = null;
                Disconnect dc = new Disconnect();
                dc.playerID = conn.getID();
                server.sendToAllTCP(dc);
            }
        });
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("ONLINE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameiServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameiServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameiServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameiServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameiServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
